openapi: 3.0.3
info:
  title: Authentication API
  description: |-
    This is Yggrasil's authentication server based on the OpenAPI 3.0 specification.
  termsOfService: http://swagger.io/terms/
  contact:
    email: email@stud.kea.dk
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
  - url: https://authentication-service-si.azurewebsites.net
paths:
  /auth/register:
    post:
      summary: Create/Register a new user 
      description: User Registration 
      requestBody:
        description: Define User credentials - email & password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSuccess'          
            application/xml:
              schema:
                $ref: '#/components/schemas/UserSuccess'
        '409':
          description: Email Already Exists
        '500':
          description: Failed - Weak Password || Internal Server Error
  /auth/login:
    post:
      summary: Login using User Credentials
      description: Login using email & password Authentication
      requestBody:
        description: Use existing User credentials - email & password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLogin'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginSuccess'          
            application/xml:
              schema:
                $ref: '#/components/schemas/UserLoginSuccess'
        '401':
          description: Unauthorized - User Not Found || Wrong Password
        '500':
          description: Failed - Internal Server Error
  /auth/refreshToken:
    post:
      summary: Refresh and get new Access Token
      description: Endpoint calling the Firebase service which refreshes the access token.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewTokens' 
        '500':
          description: Error
  /auth/logout:
    post:
      summary: Logs out current logged-in user session
      description: 'Endpoint for Firebase log-out function.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoutSuccess'
        '500':
          description: Error
  /auth/acceptInvite:
    get:
      summary: Accept an invite endpoint, with a code parameter.
      description: Endpoint for a non-existing User to accept an email-invite and register himself.
      parameters:
        - in: query
          name: code
          type: string
          required: true
      responses:
        '307':
          description: 'Success - redirects to Client Register Page.'
        '404':
          description: 'Error - Code Not Valid.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteFailed'
components:
  schemas:
    User:
      type: object
      properties:
        username:
          type: string
          example: theUser
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
        phone:
          type: string
          example: '12345'
      xml:
        name: user
    UserSuccess:
        type: object
        properties:
          status:
            type: string
            example: 'Success'
          data:
            type: object
            properties:
              email:
                type: string
                example: 'john@email.com'
              id:
                type: string
                example: 'BlKfPmPw7TSEEqg8aV2IjOzv1902'
    UserLogin:
      type: object
      properties:
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
    UserLoginSuccess:
        type: object
        properties:
          status:
            type: string
            example: 'Success'
          data:
            type: object
            properties:
              accessToken:
                type: string
                example: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImQ3YjE5MTI0MGZjZmYzMDdkYzQ3NTg1OWEyYmUzNzgzZGMxYWY4OWYiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vYXV0aC1zZXJ2aWNlLXNpIiwiYXVkIjoiYXV0aC1zZXJ2aWNlLXNpIiwiYXV0aF90aW1lIjoxNjY3OTIzNTAzLCJ1c2VyX2lkIjoiRHBvODVhT0VsVE5DRWJZZWt3RElmMTBOQW00MyIsInN1YiI6IkRwbzg1YU9FbFROQ0ViWWVrd0RJZjEwTkFtNDMiLCJpYXQiOjE2Njc5MjM1MDMsImV4cCI6MTY2NzkyNzEwMywiZW1haWwiOiJka0BlbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImZpcmViYXNlIjp7ImlkZW50aXRpZXMiOnsiZW1haWwiOlsiZGtAZW1haWwuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.F6qAak2zJ-XL4GBao0Ur2fw-1hV4T-_wKE87V5murEWLScM8iFM5afKhBp3J6pyDnNwMii9xa3WopFRZgtZz2lAtz0uef2azlwxRItytiiOHw-s9EfMsEn1vDOaN6BZfmnI3Tf86zbQMoXHhbAR-aXs39fVQdQgdKIo9Btf8HA54ncpziyd2LRcXsuvXkXKyPpf1lNN5ihah4BfirLDQaGMPNwKFX61E3onhIcqgr64hgypxa3lTI88cDIAr_c_sxiuiDsNQHkcqFqRF6TBbAr1GSILX_dEEoRBWWO0_5c4oW3DIvPZMArSFOYciOVB_EvHpAu40QEBQMlB-bee_Vw'
              refreshToken:
                type: string
                example: 'AOkPPWQxRqzOrvAxsGTnlEkCmMMHZYtT6kCO29AiCZX2l8eRU1Kyb4BPPmGmWJZ7ceTuF77LjMiMEP7o3JwCZvPrE68kkG0qdD1sUCVCzDTDASkQzk_aRfwhKUxZHtiUIdkJzkOGVbTDq1T7XwOJGwmSeADut3aKrvY-vxyblLqV_qbTnQ7feaNg7uKjCVjsSO6SxHbsVPhT_IV78V-MHY6znFx-c_Ci1g'
    NewTokens:
        type: object
        properties:
          status:
            type: string
            example: 'Success'
          data:
            type: object
            properties:
              accessToken:
                type: string
                example: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImQ3YjE5MTI0MGZjZmYzMDdkYzQ3NTg1OWEyYmUzNzgzZGMxYWY4OWYiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vYXV0aC1zZXJ2aWNlLXNpIiwiYXVkIjoiYXV0aC1zZXJ2aWNlLXNpIiwiYXV0aF90aW1lIjoxNjY3OTIzNTAzLCJ1c2VyX2lkIjoiRHBvODVhT0VsVE5DRWJZZWt3RElmMTBOQW00MyIsInN1YiI6IkRwbzg1YU9FbFROQ0ViWWVrd0RJZjEwTkFtNDMiLCJpYXQiOjE2Njc5MjM1MDMsImV4cCI6MTY2NzkyNzEwMywiZW1haWwiOiJka0BlbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImZpcmViYXNlIjp7ImlkZW50aXRpZXMiOnsiZW1haWwiOlsiZGtAZW1haWwuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.F6qAak2zJ-XL4GBao0Ur2fw-1hV4T-_wKE87V5murEWLScM8iFM5afKhBp3J6pyDnNwMii9xa3WopFRZgtZz2lAtz0uef2azlwxRItytiiOHw-s9EfMsEn1vDOaN6BZfmnI3Tf86zbQMoXHhbAR-aXs39fVQdQgdKIo9Btf8HA54ncpziyd2LRcXsuvXkXKyPpf1lNN5ihah4BfirLDQaGMPNwKFX61E3onhIcqgr64hgypxa3lTI88cDIAr_c_sxiuiDsNQHkcqFqRF6TBbAr1GSILX_dEEoRBWWO0_5c4oW3DIvPZMArSFOYciOVB_EvHpAu40QEBQMlB-bee_Vw'
              refreshToken:
                type: string
                example: 'AOkPPWQxRqzOrvAxsGTnlEkCmMMHZYtT6kCO29AiCZX2l8eRU1Kyb4BPPmGmWJZ7ceTuF77LjMiMEP7o3JwCZvPrE68kkG0qdD1sUCVCzDTDASkQzk_aRfwhKUxZHtiUIdkJzkOGVbTDq1T7XwOJGwmSeADut3aKrvY-vxyblLqV_qbTnQ7feaNg7uKjCVjsSO6SxHbsVPhT_IV78V-MHY6znFx-c_Ci1g'  
              expiresIn:
                type: integer
                format: int32
                example: 3600
    LogoutSuccess:  
        type: object
        properties:
          status:
            type: string
            example: 'Success'
          description:
            type: string
            example: 'Logged-out'
    InviteFailed:
        type: object
        properties:
          status:
            type: string
            example: 'Error'
          description:
            type: string
            example: 'Code Not Valid'